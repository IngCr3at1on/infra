---
- hosts: nodes
  vars_files:
  - env_variables
  tasks:
  - name: creating .ansible_checks
    file:
      path: ~/.ansible_checks
      state: directory
  - name: creating root/.ansible_checks
    become: yes
    file:
      path: ~/.ansible_checks
      state: directory
  - name: install dependencies
    become: yes
    apt:
      pkg: "{{ packages }}"
      state: present
  - name: enable network bridge
    shell: |
      sysctl net.bridge.bridge-nf-call-iptables=1
      touch .ansible_checks/bridge_mode
    args:
      creates: .ansible_checks/bridge_mode
  - name: add k8s host address
    become: yes
    lineinfile:
      path: /etc/hosts
      line: "{{ node1 | quote }}  k8s.{{ fqdn }}  k8s"
      state: present
  - name: add node1 host address
    become: yes
    lineinfile:
      path: /etc/hosts
      line: "{{ node1 | quote }}  k8s.{{ fqdn }}/node1  node1"
      state: present
  - name: add node2 host address
    become: yes
    lineinfile:
      path: /etc/hosts
      line: "{{ node2 | quote }}  k8s.{{ fqdn }}/node2  node2"
      state: present
  - name: add node3 host address
    become: yes
    lineinfile:
      path: /etc/hosts
      line: "{{ node3 | quote }}  k8s.{{ fqdn }}/node3  node3"
      state: present
- hosts: node1
  become: yes
  tasks:
  - name: set node1 hostname
    shell: |
      echo 'node1' > /etc/hostname
      touch ~/.ansible_checks/hostname
    args:
      creates: ~/.ansible_checks/hostname
- hosts: node2
  become: yes
  tasks:
  - name: set node2 hostname
    shell: |
      echo 'node2' > /etc/hostname
      touch ~/.ansible_checks/hostname
    args:
      creates: ~/.ansible_checks/hostname
- hosts: node3
  become: yes
  tasks:
  - name: set node3 hostname
    shell: |
      echo 'node3' > /etc/hostname
      touch ~/.ansible_checks/hostname
    args:
      creates: ~/.ansible_checks/hostname